{"ast":null,"code":"var _jsxFileName = \"/home/damlayasarr/Desktop/appNutrition/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [assistantResponses, setAssistantResponses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:8080/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: question\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n      const data = await response.text();\n\n      // Update assistantResponses with both user's question and assistant's response\n      setAssistantResponses([...assistantResponses, {\n        role: 'User',\n        content: question\n      }, {\n        role: 'Assistant',\n        content: data\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Scroll to the bottom when new responses are added\n    window.scrollTo(0, document.body.scrollHeight);\n  }, [assistantResponses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        padding: '5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"question\",\n            placeholder: \"Ask a question\",\n            value: question,\n            onChange: e => setQuestion(e.target.value),\n            \"aria-describedby\": \"button-addon2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-append\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-secondary\",\n              type: \"submit\",\n              children: \"Ask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        style: {\n          fontSize: '19px'\n        },\n        children: [assistantResponses.map((response, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [response.role === 'User' && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [response.role, \": \", response.content]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Let's do something for you...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0WRADHEqWBymtAI0Ips6jFhMTu4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","question","setQuestion","assistantResponses","setAssistantResponses","loading","setLoading","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","text","role","content","error","console","window","scrollTo","document","scrollHeight","className","children","style","padding","onSubmit","type","name","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","map","index","Fragment","_c","$RefreshReg$"],"sources":["/home/damlayasarr/Desktop/appNutrition/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [assistantResponses, setAssistantResponses] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    try {\n      setLoading(true);\n  \n      const response = await fetch('http://localhost:8080/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ question: question }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n  \n      const data = await response.text();\n      \n      // Update assistantResponses with both user's question and assistant's response\n      setAssistantResponses([\n        ...assistantResponses,\n        { role: 'User', content: question },\n        { role: 'Assistant', content: data },\n      ]);\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Scroll to the bottom when new responses are added\n    window.scrollTo(0, document.body.scrollHeight);\n  }, [assistantResponses]);\n\n  return (\n    <div className='App'>\n    <div className=\"container\" style={{padding:'5rem'}}>\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"question\"\n            placeholder=\"Ask a question\"\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            aria-describedby=\"button-addon2\"\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-outline-secondary\" type=\"submit\">\n              Ask\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"mt-3\" style={{ fontSize: '19px' }}>\n  {assistantResponses.map((response, index) => (\n    <React.Fragment key={index}>\n      {response.role === 'User' && <p>{question}</p>}\n      <p key={index}>{response.role}: {response.content}</p>\n    </React.Fragment>\n  ))}\n  {loading && <p>Let's do something for you...</p>}\n</div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,QAAQ,EAAEA;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,yBAAwBR,QAAQ,CAACS,MAAO,EAAC,CAAC;MAC7D;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;;MAElC;MACAjB,qBAAqB,CAAC,CACpB,GAAGD,kBAAkB,EACrB;QAAEmB,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEtB;MAAS,CAAC,EACnC;QAAEqB,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAEH;MAAK,CAAC,CACrC,CAAC;IACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd;IACA8B,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAEC,QAAQ,CAACd,IAAI,CAACe,YAAY,CAAC;EAChD,CAAC,EAAE,CAAC1B,kBAAkB,CAAC,CAAC;EAExB,oBACEL,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,eACpBjC,OAAA;MAAKgC,SAAS,EAAC,WAAW;MAACE,KAAK,EAAE;QAACC,OAAO,EAAC;MAAM,CAAE;MAAAF,QAAA,gBACjDjC,OAAA;QAAMoC,QAAQ,EAAE3B,YAAa;QAAAwB,QAAA,eAC3BjC,OAAA;UAAKgC,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BjC,OAAA;YACEqC,IAAI,EAAC,MAAM;YACXL,SAAS,EAAC,cAAc;YACxBM,IAAI,EAAC,UAAU;YACfC,WAAW,EAAC,gBAAgB;YAC5BC,KAAK,EAAErC,QAAS;YAChBsC,QAAQ,EAAG/B,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACgC,MAAM,CAACF,KAAK,CAAE;YAC7C,oBAAiB;UAAe;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACF9C,OAAA;YAAKgC,SAAS,EAAC,oBAAoB;YAAAC,QAAA,eACjCjC,OAAA;cAAQgC,SAAS,EAAC,2BAA2B;cAACK,IAAI,EAAC,QAAQ;cAAAJ,QAAA,EAAC;YAE5D;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACP9C,OAAA;QAAKgC,SAAS,EAAC,MAAM;QAACE,KAAK,EAAE;UAAEa,QAAQ,EAAE;QAAO,CAAE;QAAAd,QAAA,GACrD5B,kBAAkB,CAAC2C,GAAG,CAAC,CAACpC,QAAQ,EAAEqC,KAAK,kBACtCjD,OAAA,CAACJ,KAAK,CAACsD,QAAQ;UAAAjB,QAAA,GACZrB,QAAQ,CAACY,IAAI,KAAK,MAAM,iBAAIxB,OAAA;YAAAiC,QAAA,EAAI9B;UAAQ;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9C9C,OAAA;YAAAiC,QAAA,GAAgBrB,QAAQ,CAACY,IAAI,EAAC,IAAE,EAACZ,QAAQ,CAACa,OAAO;UAAA,GAAzCwB,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAwC,CAAC;QAAA,GAFnCG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACjB,CAAC,EACDvC,OAAO,iBAAIP,OAAA;UAAAiC,QAAA,EAAG;QAA6B;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAC5C,EAAA,CA5EQD,GAAG;AAAAkD,EAAA,GAAHlD,GAAG;AA8EZ,eAAeA,GAAG;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/damlayasarr/Desktop/appNutrition/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [assistantResponses, setAssistantResponses] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Update the list of responses with the new question\n      setAssistantResponses(prevResponses => [...prevResponses, {\n        role: 'user',\n        content: question\n      }]);\n      const response = await fetch('http://localhost:8080/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: question\n      });\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n      const data = await response.text();\n\n      // Update the list of responses with the assistant's response\n      setAssistantResponses(prevResponses => [...prevResponses, {\n        role: 'assistant',\n        content: data\n      }]);\n\n      // Clear the input field\n      setQuestion('');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      style: {\n        boxSizing: 'border-box'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"fittinggg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"question\",\n            placeholder: \"Ask a question\",\n            value: question,\n            onChange: e => setQuestion(e.target.value),\n            \"aria-describedby\": \"button-addon2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group-append\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-secondary\",\n              type: \"submit\",\n              children: \"Ask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        style: {\n          color: 'black',\n          fontSize: '18px'\n        },\n        children: assistantResponses.map((response, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [response.role, \": \", response.content]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WmPuD1gC6cBE6QbTPrGifI+11RA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","question","setQuestion","assistantResponses","setAssistantResponses","handleSubmit","e","preventDefault","prevResponses","role","content","response","fetch","method","headers","body","ok","Error","status","data","text","error","console","className","children","style","boxSizing","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","target","color","fontSize","map","index","_c","$RefreshReg$"],"sources":["/home/damlayasarr/Desktop/appNutrition/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [assistantResponses, setAssistantResponses] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Update the list of responses with the new question\n      setAssistantResponses(prevResponses => [\n        ...prevResponses,\n        { role: 'user', content: question },\n      ]);\n\n      const response = await fetch('http://localhost:8080/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: question,\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n\n      const data = await response.text();\n\n      // Update the list of responses with the assistant's response\n      setAssistantResponses(prevResponses => [\n        ...prevResponses,\n        { role: 'assistant', content: data },\n      ]);\n\n      // Clear the input field\n      setQuestion('');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n\n   \n  return (\n    <div className='App'>\n  <div className=\"container mt-5\" style={{ boxSizing:'border-box'}}>\n      <form onSubmit={handleSubmit}>\n      <h1>fittinggg</h1>\n        <div className=\"input-group mb-2\">\n         \n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"question\"\n            placeholder=\"Ask a question\"\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            aria-describedby=\"button-addon2\"\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-outline-secondary\" type=\"submit\">\n              Ask\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"mt-3\" style={{color:'black', fontSize:'18px'}}>\n        {assistantResponses.map((response, index) => (\n          <p key={index}>{response.role}: {response.content}</p>\n        ))}\n      </div>\n     \n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF;MACAH,qBAAqB,CAACI,aAAa,IAAI,CACrC,GAAGA,aAAa,EAChB;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAET;MAAS,CAAC,CACpC,CAAC;MAEF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEd;MACR,CAAC,CAAC;MAEF,IAAI,CAACU,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,yBAAwBN,QAAQ,CAACO,MAAO,EAAC,CAAC;MAC7D;MAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;;MAElC;MACAhB,qBAAqB,CAACI,aAAa,IAAI,CACrC,GAAGA,aAAa,EAChB;QAAEC,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAES;MAAK,CAAC,CACrC,CAAC;;MAEF;MACAjB,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAID,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACtB1B,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAACE,KAAK,EAAE;QAAEC,SAAS,EAAC;MAAY,CAAE;MAAAF,QAAA,gBAC7D1B,OAAA;QAAM6B,QAAQ,EAAEtB,YAAa;QAAAmB,QAAA,gBAC7B1B,OAAA;UAAA0B,QAAA,EAAI;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBjC,OAAA;UAAKyB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAE/B1B,OAAA;YACEkC,IAAI,EAAC,MAAM;YACXT,SAAS,EAAC,cAAc;YACxBU,IAAI,EAAC,UAAU;YACfC,WAAW,EAAC,gBAAgB;YAC5BC,KAAK,EAAElC,QAAS;YAChBmC,QAAQ,EAAG9B,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;YAC7C,oBAAiB;UAAe;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACFjC,OAAA;YAAKyB,SAAS,EAAC,oBAAoB;YAAAC,QAAA,eACjC1B,OAAA;cAAQyB,SAAS,EAAC,2BAA2B;cAACS,IAAI,EAAC,QAAQ;cAAAR,QAAA,EAAC;YAE5D;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEPjC,OAAA;QAAKyB,SAAS,EAAC,MAAM;QAACE,KAAK,EAAE;UAACa,KAAK,EAAC,OAAO;UAAEC,QAAQ,EAAC;QAAM,CAAE;QAAAf,QAAA,EAC3DrB,kBAAkB,CAACqC,GAAG,CAAC,CAAC7B,QAAQ,EAAE8B,KAAK,kBACtC3C,OAAA;UAAA0B,QAAA,GAAgBb,QAAQ,CAACF,IAAI,EAAC,IAAE,EAACE,QAAQ,CAACD,OAAO;QAAA,GAAzC+B,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwC,CACtD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAC/B,EAAA,CA5EQD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AA8EZ,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
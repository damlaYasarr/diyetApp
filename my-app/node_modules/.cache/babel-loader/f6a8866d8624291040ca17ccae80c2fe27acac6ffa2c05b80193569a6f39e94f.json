{"ast":null,"code":"var _jsxFileName = \"/home/damlayasarr/Desktop/appNutrition/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [assistantResponses, setAssistantResponses] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Update the list of responses with the new question\n      setAssistantResponses(prevResponses => [...prevResponses, {\n        role: 'user',\n        content: question\n      }]);\n      const response = await fetch('http://localhost:8080/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: question\n      });\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n      const data = await response.text();\n\n      // Update the list of responses with the assistant's response\n      setAssistantResponses(prevResponses => [...prevResponses, {\n        role: 'assistant',\n        content: data\n      }]);\n\n      // Clear the input field\n      setQuestion('');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  //here is convert to data as a good condition. \n  const content = data => {\n    // Paragraf içeriğini satırlara ayır\n    const lines = data.split(':');\n\n    // Yeni bir dizi oluştur ve satırları düzenle\n    const formattedLines = lines.map((line, index, array) => {\n      // Boş satırları filtrele\n      if (line.trim() !== '') {\n        // Satırın sonunda bir numara varsa\n        const match = line.match(/(\\d+)\\.\\s*$/);\n        if (match) {\n          return line.replace(match[0], `:\\n${match[1]}.`);\n        }\n      }\n      return line;\n    });\n\n    // Satırları birleştir\n    const formattedContent = formattedLines.join(':');\n    return formattedContent;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"fittinggg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"question\",\n          placeholder: \"Ask a question\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          \"aria-describedby\": \"button-addon2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"submit\",\n            children: \"Ask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: assistantResponses.map((response, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [response.role, \": \", content(response.content)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WmPuD1gC6cBE6QbTPrGifI+11RA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","question","setQuestion","assistantResponses","setAssistantResponses","handleSubmit","e","preventDefault","prevResponses","role","content","response","fetch","method","headers","body","ok","Error","status","data","text","error","console","lines","split","formattedLines","map","line","index","array","trim","match","replace","formattedContent","join","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/damlayasarr/Desktop/appNutrition/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [assistantResponses, setAssistantResponses] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Update the list of responses with the new question\n      setAssistantResponses(prevResponses => [\n        ...prevResponses,\n        { role: 'user', content: question },\n      ]);\n\n      const response = await fetch('http://localhost:8080/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: question,\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n\n      const data = await response.text();\n\n      // Update the list of responses with the assistant's response\n      setAssistantResponses(prevResponses => [\n        ...prevResponses,\n        { role: 'assistant', content: data },\n      ]);\n\n      // Clear the input field\n      setQuestion('');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  //here is convert to data as a good condition. \n   const content=(data)=>{ \n          // Paragraf içeriğini satırlara ayır\n  const lines = data.split(':');\n\n  // Yeni bir dizi oluştur ve satırları düzenle\n  const formattedLines = lines.map((line, index, array) => {\n    // Boş satırları filtrele\n    if (line.trim() !== '') {\n      // Satırın sonunda bir numara varsa\n      const match = line.match(/(\\d+)\\.\\s*$/);\n      if (match) {\n        return line.replace(match[0], `:\\n${match[1]}.`);\n      }\n    }\n    return line;\n  });\n\n  // Satırları birleştir\n  const formattedContent = formattedLines.join(':');\n\n  return formattedContent;    \n   }\n\n   \n  return (\n    <div className=\"container mt-5\">\n      <form onSubmit={handleSubmit}>\n      <h1>fittinggg</h1>\n        <div className=\"input-group mb-2\">\n         \n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"question\"\n            placeholder=\"Ask a question\"\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            aria-describedby=\"button-addon2\"\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-outline-secondary\" type=\"submit\">\n              Ask\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"mt-3\">\n        {assistantResponses.map((response, index) => (\n          <p key={index}>{response.role}: {content(response.content)}</p>\n        ))}\n      </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}